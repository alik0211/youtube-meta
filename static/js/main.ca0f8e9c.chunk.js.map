{"version":3,"sources":["ui/search/cmp-search.js","helpers/video.js","ui/search/cnt-search.js","actions/videos.js","actions/categories.js","ui/info/cmp-info.js","ui/info/cnt-info.js","ui/footer/cmp-footer.js","cmp-app.js","cnt-app.js","reducers/videos.js","reducers/categories.js","reducers/index.js","index.js","store/configureStore.js"],"names":["Search","state","searchString","error","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","getVideo","string","url","URL","hostname","includes","searchParams","get","pathname","slice","getVideoIdFromString","then","action","payload","message","this","isFetched","className","onSubmit","type","placeholder","onChange","disabled","autoFocus","React","Component","mapDispatchToProps","id","dispatch","RSAA","endpoint","process","method","types","fetch","a","response","json","items","length","ApiError","Response","JSON","stringify","headers","categoryId","snippet","getCategory","connect","ownProps","videos","Info","video","Object","keys","map","key","keyIsIgnored","Date","toLocaleString","split","item","join","getProcessedValueBasedKey","collection","currentVideo","categories","category","title","Footer","href","App","initialState","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","apiMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca0f8e9c.chunk.js","sourcesContent":["import React from 'react';\nimport { getVideoIdFromString } from '../../helpers/video';\n\nimport './search.css';\n\nclass Search extends React.Component {\n  state = {\n    searchString: '',\n    error: null\n  };\n  handleChange = event => {\n    this.setState({\n      searchString: event.currentTarget.value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.setState({\n      error: null\n    });\n\n    this.props\n      .getVideo(getVideoIdFromString(this.state.searchString))\n      .then(action => {\n        if (action.error) {\n          this.setState({\n            error: action.payload.message\n          });\n        }\n\n        return action;\n      });\n  };\n  render() {\n    const { error, searchString } = this.state;\n    const { isFetched } = this.props;\n\n    return (\n      <div className=\"search\">\n        <div className=\"search__inner\">\n          <form onSubmit={this.handleSubmit} className=\"search__form\">\n            <input\n              type=\"text\"\n              placeholder=\"Video url or id\"\n              onChange={this.handleChange}\n              value={searchString}\n              className=\"search__input\"\n              disabled={isFetched}\n              autoFocus\n            />\n            <button\n              type=\"submit\"\n              className=\"search__button\"\n              disabled={isFetched}\n            >\n              Search\n            </button>\n            {!!error && <div className=\"search__error\">{error}</div>}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Fragment } from 'react';\n\nexport function getVideoIdFromString(string) {\n  try {\n    const url = new URL(string);\n    const { hostname } = url;\n\n    if (['www.youtube.com', 'm.youtube.com'].includes(hostname)) {\n      return url.searchParams.get('v');\n    }\n\n    if (hostname === 'youtu.be') {\n      return url.pathname.slice(1);\n    }\n  } catch (error) {\n    return string;\n  }\n\n  return string;\n}\n\nexport function keyIsIgnored(key) {\n  const ignoredKeys = ['thumbnails', 'localized'];\n\n  return ignoredKeys.includes(key);\n}\n\nexport function getProcessedValueBasedKey(key, value) {\n  switch (key) {\n    case 'publishedAt':\n      return new Date(value).toLocaleString();\n\n    case 'description':\n      return value.split('\\n').map((item, key) => {\n        return (\n          <Fragment key={key}>\n            {item}\n            <br />\n          </Fragment>\n        );\n      });\n\n    case 'tags':\n      return value.join(', ');\n\n    default:\n      return value;\n  }\n}\n","import { connect } from 'react-redux';\n\nimport Search from './cmp-search';\n\nimport { getVideo } from '../../actions/videos';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isFetched: state.videos.isFetched\n  };\n};\n\nconst mapDispatchToProps = {\n  getVideo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import { RSAA, ApiError } from 'redux-api-middleware';\n\nimport { getCategory } from './categories';\n\nexport const GET_VIDEO_REQUEST = 'GET_VIDEO_REQUEST';\nexport const GET_VIDEO_SUCCESS = 'GET_VIDEO_SUCCESS';\nexport const GET_VIDEO_FAILURE = 'GET_VIDEO_FAILURE';\n\nexport const getVideo = id => dispatch => {\n  return dispatch({\n    [RSAA]: {\n      endpoint: `https://www.googleapis.com/youtube/v3/videos?key=${\n        process.env.REACT_APP_GOOGLE_API_KEY\n      }&part=snippet&id=${id}`,\n      method: 'GET',\n      types: [GET_VIDEO_REQUEST, GET_VIDEO_SUCCESS, GET_VIDEO_FAILURE],\n      fetch: async (...args) => {\n        const response = await fetch(...args);\n        const json = await response.json();\n\n        if (json.items.length === 0) {\n          throw new ApiError(404, `No video found with \"${id}\" id`);\n        }\n\n        return new Response(JSON.stringify(json.items[0]), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    }\n  }).then(action => {\n    if (action.error) {\n      return action;\n    }\n\n    const { categoryId } = action.payload.snippet;\n\n    dispatch(getCategory(categoryId));\n\n    return action;\n  });\n};\n","import { RSAA, ApiError } from 'redux-api-middleware';\n\nexport const GET_CATEGORY_REQUEST = 'GET_CATEGORY_REQUEST';\nexport const GET_CATEGORY_SUCCESS = 'GET_CATEGORY_SUCCESS';\nexport const GET_CATEGORY_FAILURE = 'GET_CATEGORY_FAILURE';\n\nexport const getCategory = id => dispatch => {\n  return dispatch({\n    [RSAA]: {\n      endpoint: `https://www.googleapis.com/youtube/v3/videoCategories?key=${\n        process.env.REACT_APP_GOOGLE_API_KEY\n      }&part=snippet&id=${id}`,\n      method: 'GET',\n      types: [GET_CATEGORY_REQUEST, GET_CATEGORY_SUCCESS, GET_CATEGORY_FAILURE],\n      fetch: async (...args) => {\n        const response = await fetch(...args);\n        const json = await response.json();\n\n        if (json.items.length === 0) {\n          throw new ApiError(404, `No category found with \"${id}\" id`);\n        }\n\n        return new Response(JSON.stringify(json.items[0]), {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    }\n  });\n};\n","import React from 'react';\nimport { keyIsIgnored, getProcessedValueBasedKey } from '../../helpers/video';\n\nimport './info.css';\n\nclass Info extends React.Component {\n  render() {\n    const { video } = this.props;\n\n    if (!video) {\n      return null;\n    }\n\n    const { snippet } = video;\n\n    return (\n      <div className=\"info\">\n        <div className=\"info__inner\">\n          <table className=\"info__table\">\n            <tbody className=\"info__tbody\">\n              {Object.keys(snippet).map(key => {\n                if (keyIsIgnored(key)) {\n                  return null;\n                }\n\n                return (\n                  <tr className=\"info__item\" key={key}>\n                    <td className=\"info__item-name\">{key}</td>\n                    <td className=\"info__item-value\">\n                      {getProcessedValueBasedKey(key, snippet[key])}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Info;\n","import { connect } from 'react-redux';\n\nimport Info from './cmp-info';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { collection: videos, currentVideo } = state.videos;\n  const { collection: categories } = state.categories;\n\n  if (!currentVideo) {\n    return {\n      video: null\n    };\n  }\n\n  let video = videos[currentVideo];\n  const { categoryId } = video.snippet;\n\n  if (categoryId in categories) {\n    video = {\n      ...video,\n      snippet: {\n        id: video.id,\n        ...video.snippet,\n        category: categories[categoryId].snippet.title\n      }\n    };\n  }\n\n  return {\n    video\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Info);\n","import React from 'react';\n\nimport './footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <div className=\"footer__inner\">\n          Source code on{' '}\n          <a href=\"https://github.com/alik0211/youtube-meta\">GitHub</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Search from './ui/search/cnt-search';\nimport Info from './ui/info/cnt-info';\nimport Footer from './ui/footer/cmp-footer';\n\nimport './app.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <main className=\"app__content\">\n          <div className=\"app__search\">\n            <Search />\n          </div>\n          <div className=\"app__info\">\n            <Info />\n          </div>\n        </main>\n        <footer className=\"app__footer\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\n\nimport App from './cmp-app';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {};\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  GET_VIDEO_REQUEST,\n  GET_VIDEO_SUCCESS,\n  GET_VIDEO_FAILURE\n} from '../actions/videos';\n\nconst initialState = {\n  collection: {},\n  currentVideo: null,\n  isFetched: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_VIDEO_REQUEST:\n      return {\n        ...state,\n        isFetched: true\n      };\n\n    case GET_VIDEO_SUCCESS:\n      const video = action.payload;\n\n      return {\n        ...state,\n        collection: {\n          ...state.collection,\n          [video.id]: video\n        },\n        currentVideo: video.id,\n        isFetched: false\n      };\n\n    case GET_VIDEO_FAILURE:\n      return {\n        ...state,\n        isFetched: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_CATEGORY_REQUEST,\n  GET_CATEGORY_SUCCESS,\n  GET_CATEGORY_FAILURE\n} from '../actions/categories';\n\nconst initialState = {\n  collection: {},\n  isFetched: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CATEGORY_REQUEST:\n      return {\n        ...state,\n        isFetched: true\n      };\n\n    case GET_CATEGORY_SUCCESS:\n      const category = action.payload;\n\n      return {\n        ...state,\n        collection: {\n          ...state.collection,\n          [category.id]: category\n        },\n        isFetched: false\n      };\n\n    case GET_CATEGORY_FAILURE:\n      return {\n        ...state,\n        isFetched: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport videos from './videos';\nimport categories from './categories';\n\nexport default combineReducers({\n  videos,\n  categories\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './cnt-app';\nimport configureStore from './store/configureStore';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { apiMiddleware } from 'redux-api-middleware';\n\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk, apiMiddleware)\n  );\n}\n"],"sourceRoot":""}